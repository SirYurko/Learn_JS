/*eslint-disable*/

// let single = 'одинарні-лапки';
// let double = "подвійні-лапки";

// let backticks = `зворотні-лапки`;

// //------------------------

// function sum(a, b) {
//     return a + b;
// }

// // alert(`1 + 2 = ${sum(1, 2)}.`)

// //-------------------------

// let guestList = `Гості:
// Іван
// Петро
// Марія
// `;

// // alert(guestList)

// // -----------------------

// guestList2 = "Гості: \n *Ivan\n Petro\n Maria";
// // alert(guestList2)

// //--------------------

// let str = `Hello`;

// first

//alert( str[0] ); // H

//alert( str.charAt(0) ); // H

// last

// alert( str[str.length - 1] ); // o старий метод не використовувати
// alert( str.at(-1) ); // o новий більш зручний

// alert( str[-2] ) // undefined оскільки запис в квадратних дужках якщо потрібно взнати від'ємний індекс слова, використовуйте .at()
// alert( str.at(-2)) // l

// // -------------

// for(let char of str){
//     alert(char) // H e l l o
// }

// let str = 'Ой';

// str[0] = 'о'; // помилка
// alert( str[0] ); // не працює
// // Можна створити новий рядок замість старого, записавши його в ту саму змінну.

// str = 'o' + str[1];

// alert( str )

//---------------
// Зміна регістру

// alert ('Інтерфейс'.toUpperCase())  // ІНТЕРФЕЙС
// alert('Інтерфейс'.toLocaleLowerCase()) // інтерфейс

// // якщо ми хочемо перенести конкретний символ

// alert('Interface'[0].toUpperCase()) // i

//------------------------
// Пошук підрядків

// Синтаксис:
// str.indexOf(substr, pos)

// let str = 'Віджет з ідентифікатором';

// alert( str.indexOf('Віджет') ) // 0, тому що 'Віджет' було знайдено на початку

// alert( str.indexOf('віджет') ); // -1, збігів не знайдено, пошук чутливий до регістру

// alert( str.indexOf("ід") ); // 1, підрядок "ід" знайдено на позиції 1 (..іджет з ідентифікатором)

// alert( str.indexOf("з")) // 7

// // Необовʼязковий другий параметр pos дозволяє нам почати пошук із заданої позиції.

// alert( str.indexOf('ід', 2)) // 9 (..ідентифікатором)

//- - -- - - - - - -

// Щоб знайти усі збіги, нам потрібно запустити indexOf в циклі.
// Кожен новий виклик здійснюється з позицією після попереднього збігу:

let str = 'Хитрий, як лисиця, сильний як Як';

let target = 'як';  // давайте знайдемо це

let pos = 0;
while(true){
    let foundPos = str.indexOf(target, pos);
    if (foundPos == -1) break;

    alert(`Знайдено тут: ${foundPos}` );
    pos = foundPos + 1; // продовжуємо з наступної позиції
}